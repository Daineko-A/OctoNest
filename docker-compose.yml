version: '3.8'

services:
  kafka:
    image: bitnami/kafka:4.0
    container_name: octo-kafka
    restart: unless-stopped
    ports:
#      - "8142:9092"
#      - "8144:8144"
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_KRAFT_MODE=true
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_HEAP_OPTS=-Xmx2048m -Xms2048m
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_MESSAGE_MAX_BYTES=10485760
      - KAFKA_CFG_MAX_PARTITION_FETCH_BYTES=5242880
      - KAFKA_CFG_RETENTION_MS=604800000
      - KAFKA_CREATE_TOPICS=transaction:3:1,transaction2:3:1
      - KAFKA_JMX_HOSTNAME=kafka
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093

#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,SASL_SSL://:9094,CONTROLLER://:9093,SASL_SSL_LOCAL://0.0.0.0:8144
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,SASL_SSL://kafka:9094,CONTROLLER://kafka:9093,SASL_SSL_LOCAL://localhost:8144
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:SASL_SSL,SASL_SSL:SASL_SSL,CONTROLLER:SASL_SSL,SASL_SSL_LOCAL:SASL_SSL
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

#      - KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL=SCRAM-SHA-512
#      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=SCRAM-SHA-512
#      - KAFKA_CFG_SASL_ENABLED_MECHANISMS=PLAIN,SCRAM-SHA-256,SCRAM-SHA-512
#      - KAFKA_CFG_SSL_CLIENT_AUTH=required
#      - KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=https

      - KAFKA_CONTROLLER_USER=kafka_user
      - KAFKA_CONTROLLER_PASSWORD=kafka_pass
      - KAFKA_INTER_BROKER_USER=kafka_user
      - KAFKA_INTER_BROKER_PASSWORD=kafka_pass
      - KAFKA_CLIENT_USERS=kafka_user
      - KAFKA_CLIENT_PASSWORDS=kafka_pass

#      - KAFKA_CFG_KEYSTORE_TYPE=JKS
#      - KAFKA_CFG_TRUSTSTORE_TYPE=JKS
#      - KAFKA_CLUSTERS_0_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=
#      - KAFKA_CFG_SSL_KEYSTORE_LOCATION=/bitnami/kafka/config/certs/kafka.keystore.jks
#      - KAFKA_CFG_SSL_TRUSTSTORE_LOCATION=/bitnami/kafka/config/certs/kafka.truststore.jks
#      - KAFKA_CFG_SSL_KEYSTORE_PASSWORD=kafka123storepass
#      - KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD=kafka123storepass
#      - KAFKA_CFG_SSL_KEY_PASSWORD=kafka123storepass
    volumes:
      - kafka_octo_data:/bitnami/kafka
#      - ./certs:/bitnami/kafka/config/certs

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: octo-kafka-ui
    restart: unless-stopped
    ports:
      - "8150:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
#      - KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL=SASL_SSL
#      - KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM=SCRAM-SHA-512
#      - KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.scram.ScramLoginModule required username="kafka_user" password="kafka_pass";

#      - KAFKA_CLUSTERS_0_SSL_TRUSTSTORE_LOCATION=/certs/kafka.truststore.jks
#      - KAFKA_CLUSTERS_0_SSL_TRUSTSTORE_PASSWORD=kafka123storepass

#      - KAFKA_CLUSTERS_0_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=
    depends_on:
      - kafka

  postgres:
    image: postgres:15
    container_name: octo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: octouser
      POSTGRES_PASSWORD: pass8A
      POSTGRES_DB: octo_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_octo_data:/var/lib/postgresql/data

#  redis:
#    image: redis:7
#    container_name: octo-redis
#    ports:
#      - "8101:6379"
#    volumes:
#      - redis_data:/data
#      - ./additional_data/redis.conf:/usr/local/etc/redis/redis.conf
#    command: redis-server /usr/local/etc/redis/redis.conf

volumes:
  kafka_octo_data:
    name: kafka_octo_data
#  redis_data:
#    name: redis_data
  postgres_octo_data:
    name: postgres_octo_data